# --- STAGE 1: The PyTorch & GPU Dependencies Builder ---
# This stage pre-downloads all the necessary PyTorch, torchvision, triton,
# and NVIDIA CUDA dependencies into a wheel cache. This is a highly stable
# layer that only needs to be rebuilt if these dependencies change.
FROM nvidia/cuda:12.8.0-devel-ubuntu22.04

# Use noninteractive frontend for package installation.
ENV DEBIAN_FRONTEND=noninteractive

# Install core Python and development tools in a single layer to optimize caching.
RUN apt-get update && \
    apt-get install -y --no-install-recommends python3-pip python3-dev && \
    rm -rf /var/lib/apt/lists/*

# Set a working directory for downloading packages.
WORKDIR /tmp/downloads

# Use pip download to fetch the wheel files for PyTorch, Triton, NVIDIA CUDA, and other large dependencies.
RUN python3 -m pip download --no-cache-dir \
    --dest /tmp/wheels \
    torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128 \
    && python3 -m pip download --no-cache-dir --dest /tmp/wheels \
    triton \
    && python3 -m pip download --no-cache-dir --dest /tmp/wheels \
    nvidia-cublas-cu12 \
    nvidia-cuda-cupti-cu12 \
    nvidia-cuda-nvrtc-cu12 \
    nvidia-cuda-runtime-cu12 \
    nvidia-cudnn-cu12 \
    nvidia-cufft-cu12 \
    nvidia-cufile-cu12 \
    nvidia-curand-cu12 \
    nvidia-cusolver-cu12 \
    nvidia-cusparse-cu12 \
    nvidia-cusparselt-cu12 \
    nvidia-nccl-cu12 \
    nvidia-nvjitlink-cu12 \
    nvidia-nvtx-cu12 \
    pillow \
    PyYAML \
    sympy \
    mpmath \
    virtualenv \
    networkx \
    black